STAGE: stage-2-14
TITLE: Structured Data: Lists
DESCRIPTION: A list is a sequence of Anything - characters, strings, numbers...even other lists!
NOTE: Lists take the form: <list> = [<expression>,<expression>,...]
NOTE: Empty list => []
NOTE: Elements of a list start from 0 so: [0,1,2,3...]
NOTE: When defining a list, especially a long list, you can split the <expression>'s up *****example*****
NOTE: You can even index within an indexed list. i.e. list1 = [['Troy','is'],['cool','!']- print list1[1][1] => will print the 4th element of the list, in this case '!'
EXAMPLE:https://drive.google.com/open?id=0B2DsntQwDC9dZ2dwemtaYjBfTzA
STAGE: stage-2-15
TITLE: List Mutations and Aliasing
DESCRIPTION: Lists support Mutations and Aliasing.  With mutation you are able to change the value of a list after it has been created.  With Aliasing, you can assign a list to two separate names; however if you mutate the list for one, you mutate it for both. 
EXAMPLE:https://drive.google.com/open?id=0B2DsntQwDC9dS3dDTXlncnY2MG8
STAGE: stage-2-16
TITLE: List Operations
DESCRIPTION: List operations allow you to perform certain tasks on lists
NOTE: The "append" operation lets you insert another element into an existing list: <list>.append(<element>)
NOTE: The "plus" operation is like concatination for lists: [1,2] + [3,4] => [1,2,3,4]
Note: The "len" operation outputs the number of elements in a list (this also works on strings): len([0,1]) => 2
EXAMPLE:https://drive.google.com/open?id=0B2DsntQwDC9dNm56SDFETVhERjA
STAGE: STAGE-2-17
TITLE: Sructured Data: For Loops
DESCRIPTION: For loops used on lists are similar to using While loops, however they make it easier because it essentially has a built in counter: the length of the list!
NOTE: for <name> in <list>:
NOTE: <name> is essentially the variable name
NOTE: For loop on list example:
NOTE: "Index" is used to find an element within a list.  It takes the form: &lt;list&gt;.index(&lt;value&gt;)
NOTE: Index always gives the 1st found position
NOTE: Index will return an error if the value is not found
NOTE: "in" is used to determine wether or not a value is in a list.  it takes the form: &lt;value&gt; in &lt;list&gt;
NOTE: if &lt;value&gt; is in the &lt;list&gt;, output is True otherwise, output is false
NOTE: &lt;value&gt; not in &lt;list&gt; -> is the opposite of "in".2
EXAMPLE:https://drive.google.com/open?id=0B2DsntQwDC9dSUhTVlEwbTVZakE